1.数组名的值是一个指针常量，也就是数字第一个元素的地址

2.数组具有确定数量的元素，而指针只是一个标量值。只有数组名在表达式中使用，编译器才会为它产生一个指针常量。

3.只有在两种场合下，数组名并不是指针常量来表示————就是当数组名作为sizeof的操作符或者单目运算操作符&的操作数。

4.不能用赋值符把一个数组的所有元素复制到另外一个数组。

5.例如：*ap+6，先执行间接访问，再执行加法运算。

6.数组的传值调用行为表现在它传递给函数的是参数的一份拷贝(指向数组起始位置的指针的拷贝)，所以函数可以自由地操作它的指针形参，而不必担心修改对应的实参的指针。

7.函数原型中的一维数组形参无需写明它的元素数目，是因为函数并不为数组参数分配内存空间，形参只是一个指针，它指向的是一个已经被分配好内存的空间。

8.当数组初始化局部于一个函数时，如果并不需要每次都对数组进行初始化，那就可以把数组声明为static，这样数组的初始化只需要在程序开始前执行一次。

9.marix[4, 3] 等价于 marix[3]：逗号操作符首先对第一个表达式进行求值，但随即丢弃这个值，最后的结果是第二个表达式的值。 

10.array[vlaue] 等价于 *(array + value)。

11.字符串列表可以以矩阵的形式存储，也可以以指向字符串常量的指针数组形式存储。

12.只要有可能，函数的指针形参都声明为const。